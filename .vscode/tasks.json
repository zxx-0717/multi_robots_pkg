{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        // Build tasks
        {
            "label": "build",
            "detail": "Build workspace (default)",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths  src/ --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build sllidar",
            "detail": "Build workspace (default)",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/sllidar_ros2-main --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "debug",
            "detail": "Build workspace (debug)",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --packages-ignore astra_camera cartographer aruco_ros --cmake-args '-DCMAKE_BUILD_TYPE=Debug' -Wall -Wextra -Wpedantic",
            "group": "build",
            "problemMatcher": "$gcc"
        },
        {
            "label": "build nav2",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --parallel-workers 1 --base-paths src/navigation2/nav2_bt_navigator src/navigation2/nav2_behavior_tree src/navigation2/nav2_dwb_controller/dwb_critics src/navigation2/nav2_controller src/navigation2/nav2_core src/navigation2/nav2_rotation_shim_controller src/navigation2/nav2_bringup --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build costmap2d",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --parallel-workers 1 --base-paths src/navigation2/nav2_costmap_2d --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build smac_planner",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --parallel-workers 1 --base-paths src/navigation2/nav2_controller src/navigation2/nav2_bringup src/navigation2/nav2_behavior_tree --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build relocalization",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --parallel-workers 1 --base-paths src/capella_localization_pack --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build astra",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/aruco_marker_location/ros2_astra_camera/astra_camera src/aruco_marker_location/ros2_astra_camera/astra_camera_msgs src/aruco_marker_location/aruco_ros/aruco src/aruco_marker_location/aruco_ros/aruco_msgs src/aruco_marker_location/aruco_ros/aruco_ros --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build capella_msgs",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_msgs/capella_ros_msg src/capella_msgs/capella_ros_service_interfaces --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build dock",
            "detail": "Build dock Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_ros_dock/capella_ros_dock_msgs src/capella_ros_dock/capella_ros_dock --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build charge_manager_pkg",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/charge_manager_pkg/charge_manager_msgs src/charge_manager_pkg/charge_manager --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build apriltag",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/apriltag --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build apriltag_ros",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/apriltag_ros --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build multi_robts_avoidance",
            "detail": "Build Navigation2 Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/multi_robots --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build nav2_bringup",
            "detail": "Build nav2_bringup Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/nav2_bringup --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build cartographer",
            "detail": "Build Cartographer Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/cartographer/ src/cartographer_ros/cartographer_ros --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build image_transport",
            "detail": "Build Cartographer Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/image_common/image_transport --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build capella_serial_pack_hcj",
            "detail": "Build capella_serial_pack_hcj Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --parallel-workers 1 --base-paths src/capella_serial_pack_hcj --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        {
            "label": "build capella_lidar_pack_wxb",
            "detail": "Build capella_lidar_pack_wxb Packages",
            "type": "shell",
            "command": "colcon build --merge-install --symlink-install --base-paths src/capella_lidar_pack_wxb/laser_udp-V1.0_240821 src/capella_lidar_pack_wxb/wr_ls_udp  --cmake-args '-DCMAKE_BUILD_TYPE=RelWithDebInfo' '-DCMAKE_EXPORT_COMPILE_COMMANDS=On' -Wall -Wextra -Wpedantic",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": "$gcc"
        },
        // Test tasks
        {
            "label": "test",
            "detail": "Run all unit tests and show results.",
            "type": "shell",
            "command": "colcon test --merge-install --symlink-install; colcon test-result",
            "group": {
                "kind": "test",
                "isDefault": true
            }
        },
        // Clean
        {
            "label": "clean",
            "detail": "Run the clean target",
            "type": "shell",
            "command": "colcon build --cmake-target clean",
            "problemMatcher": "$gcc"
        },
        {
            "label": "purge",
            "detail": "Purge workspace by deleting all generated files.",
            "type": "shell",
            "command": "rm -fr build install log; py3clean .",
            "problemMatcher": []
        },
        // Linting and static code analysis tasks
        {
            "label": "fix",
            "detail": "Reformat files with uncrustify.",
            "type": "shell",
            "command": "ament_uncrustify --reformat src/",
            "problemMatcher": []
        },
        {
            "label": "uncrustify",
            "detail": "Lint files with uncrustify.",
            "type": "shell",
            "command": "ament_uncrustify src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "uncrustify",
                    "source": " uncrustify",
                    "fileLocation": "relative",
                    "pattern": [
                        /// just the file name message
                        {
                            "regexp": "^(.*)'(.*)':",
                            "kind": "file",
                            "file": 2,
                            "message": 1
                        },
                    ]
                }
            ]
        },
        {
            "label": "cpplint",
            "detail": "Lint files with cpplint.",
            "type": "shell",
            "command": "ament_cpplint src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "cpplint",
                    "source": " cpplint",
                    "fileLocation": "absolute",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):\\s+(.+)\\[(.+)\\]$",
                            "file": 1,
                            "line": 2,
                            "message": 3,
                            "code": 4
                        }
                    ]
                }
            ]
        },
        {
            "label": "cppcheck",
            "detail": "Run static code checker cppcheck.",
            "type": "shell",
            "command": "ament_cppcheck src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "cppcheck",
                    "source": "cppcheck",
                    "pattern": [
                        {
                            "regexp": "^\\[(.+):(\\d+)\\]:\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "message": 3
                        }
                    ]
                }
            ]
        },
        {
            "label": "lint_cmake",
            "detail": "Run lint on cmake files.",
            "type": "shell",
            "command": "ament_lint_cmake src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "lint_cmake",
                    "source": "lint_cmake",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "message": 3
                        }
                    ]
                }
            ]
        },
        {
            "label": "flake8",
            "detail": "Run flake8 on python files.",
            "type": "shell",
            "command": "ament_flake8 src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "flake8",
                    "source": "flake8",
                    "pattern": [
                        {
                            "code": 4,
                            "column": 3,
                            "file": 1,
                            "line": 2,
                            "message": 5,
                            "regexp": "^(.+):(\\d+):(\\d+): (\\w\\d+) (.+)$"
                        }
                    ]
                }
            ]
        },
        {
            "label": "pep257",
            "detail": "Run pep257 on python files.",
            "type": "shell",
            "command": "ament_pep257 src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "pep257",
                    "source": "pep257",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+)\\s+(.+):\\s+(.+):\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "code": 4,
                            "message": 5
                        }
                    ]
                }
            ]
        },
        {
            "label": "xmllint",
            "detail": "Run xmllint on xml files.",
            "type": "shell",
            "command": "ament_xmllint src/",
            "presentation": {
                "panel": "dedicated",
                "reveal": "silent",
                "clear": true
            },
            "problemMatcher": [
                {
                    "owner": "xmllint",
                    "source": "xmllint",
                    "fileLocation": "absolute",
                    "pattern": [
                        {
                            "regexp": "^(.+):(\\d+):\\s+(.+)\\s+:\\s+(.+)$",
                            "file": 1,
                            "line": 2,
                            "code": 3,
                            "message": 4
                        }
                    ]
                }
            ]
        },
        {
            "label": "lint all",
            "detail": "Run all linters.",
            "dependsOn": [
                "cppcheck",
                "cpplint",
                "flake8",
                "lint_cmake",
                "pep257",
                "xmllint",
                "uncrustify"
            ],
            "problemMatcher": []
        },
        // Workspace editing tasks
        {
            "label": "new ament_cmake package",
            "detail": "Create a new ROS cpp package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_cmake ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "new ament_python package",
            "detail": "Create a new ROS python package from a template.",
            "type": "shell",
            "command": "ros2 pkg create --destination-directory src --build-type ament_python ${input:package}",
            "problemMatcher": []
        },
        {
            "label": "import from workspace file",
            "detail": "Use vcs to import modules specified by a workspace/rosinstall file.",
            "type": "shell",
            "command": "vcs import < src/ros2.repos src",
            "problemMatcher": []
        },
        {
            "label": "update workspace file",
            "detail": "Use vcs to update repositories in src to workspace file.",
            "type": "shell",
            "command": "vcs export src > src/ros2.repos",
            "problemMatcher": []
        },
        {
            "label": "install dependencies",
            "detail": "Install all dependencies specified in the workspaces package.xml files.",
            "type": "shell",
            "command": "sudo apt-get update && rosdepc update && rosdepc install --from-paths src src/navigation2/nav2_bt_navigator src/navigation2/nav2_behavior_tree  --ignore-src -y",
            "problemMatcher": []
        },
        {
            "label": "Start Websocket Bridge and Node Manager",
            "detail": "Bridge communication bewteen ROS2 and outside world.",
            "type": "shell",
            "command": "ros2 launch capella_nav_and_carto_server launch.xml headless:=False",
            "problemMatcher": []
        },
        {
            "label": "Start dock_nodes",
            "detail": "Start dock_nodes.",
            "type": "shell",
            "command": "ros2 launch capella_ros_dock test_dock.launch.py",
            "problemMatcher": []
        },
        {
            "label": "start apriltag_ros_double",
            "detail": "start apriltag_ros_double.",
            "type": "shell",
            "command": "declare -x marker_id_and_bluetooth_mac=2:3/94:C9:60:43:BE:01 APRILTAG_SIZE=0.04 MARKER_FRAME_TRANSLATION=-0.04 MARKER_FRAME_RADIUS_THRESHOLD=0.017 SIMILARITY_THRESHOLD=0.99 BASE_LINK_DUMMY_TRANSFORM_X=-0.375 BASE_LINK_DUMMY_TRANSFORM_Y=0.0;ros2 launch apriltag_ros apriltag_ros_double.launch.py ",
            "problemMatcher": []
        },
        {
            "label": "start nav2",
            "detail": "start nav2.",
            "type": "shell",
            "command": "ros2 launch capella_ros_launcher nav2_only.launch.py namespace:=mk7 use_namespace:=True",
            "problemMatcher": []
        },
        {
            "label": "start pub_goal",
            "detail": "start pub_goal.",
            "type": "shell",
            "command": "ros2 run random_target_publisher random_target_publisher_node  --ros-args -r __ns:=/mk7",
            "problemMatcher": []
        },
        {
            "label": "start multi_robts_avoidance",
            "detail": "start multi_robts_avoidance.",
            "type": "shell",
            "command": "RMW_IMPLEMENTATION= ROBOT_PRIORITY=7 ros2 launch nav2_multi_robots_avoidance multi_robots_avoidance.launch.py namespace:=/mk7 use_namespace:=True",
            "problemMatcher": []
        },
        {
            "label": "start multi_robts_avoidance-no-namespace",
            "detail": "start multi_robts_avoidance-no-namespace.",
            "type": "shell",
            "command": "CAPELLA_ROS_NAMESPACE=mk7 ROBOT_PRIORITY=7 ros2 launch nav2_multi_robots_avoidance multi_robots_avoidance.launch.py ",
            "problemMatcher": []
        },
        {
            "label": "start pub_info",
            "detail": "start pub_info.",
            "type": "shell",
            "command": "CAPELLA_ROS_NAMESPACE=mk7 ros2 run capella_multi_robots_info multi_robots_pub_node",
            "problemMatcher": []
        },
        {
            "label": "start sub_info",
            "detail": "start sub_info.",
            "type": "shell",
            "command": "CAPELLA_ROS_NAMESPACE=mk7 ros2 run capella_multi_robots_info multi_robots_sub_node",
            "problemMatcher": []
        },
        {
            "label": "start motion_control node",
            "detail": "start motion_control node.",
            "type": "shell",
            "command": "ros2 run capella_ros_dock motion_control --ros-args --params-file /workspaces/capella_ros_docker/src/capella_ros_dock/capella_ros_dock/params/config.yaml --log-level motion_control:=debug -p charger_contact_condition_type:=0 -p last_docked_distance_offset_:=0.21 -p camera_baselink_dis:=0.024",
            "problemMatcher": []
        },
        {
            "label": "start test_dock node",
            "detail": "start test_dock node.",
            "type": "shell",
            "command": "ros2 run capella_ros_dock test_dock --ros-args --params-file /home/tj2022/workspace/capella_ros_docker/src/capella_ros_dock/capella_ros_dock/params/config.yaml -p 'mac:=94:C9:60:43:BE:01' -p marker_id:=0 ",
            "problemMatcher": []
        },
    ],
    "inputs": [
        {
            "id": "package",
            "type": "promptString",
            "description": "Package name"
        }
    ]
}